name: "Draft new release"

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The version you want to release in format yyyyy-MM, for example 2022-10'
        required: true

jobs:
  draft-new-release:
    name: "Draft a new release"
    runs-on: ubuntu-latest
    outputs:
      pr_url: ${{ steps.pull_request.outputs.pr_url }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
      - name: Check if release tag exists
        run: |
          if [[ $(git ls-remote --tags origin refs/tags/"${{ github.event.inputs.version }}") ]]; then
            echo "## Release ${{ github.event.inputs.version }} already exists"
            exit 1
          fi
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            bigquery:
              - 'clouds/bigquery/version'
            databricks:
              - 'clouds/databricks/version'
            postgres:
              - 'clouds/postgres/version'
            redshift:
              - 'clouds/redshift/version'
            snowflake:
              - 'clouds/snowflake/version'
          base: stable
      - name: Update bq changelog
        if: steps.changes.outputs.bigquery == 'true'
        run: |
          BQ_VERSION=$(cat clouds/bigquery/version)
          sed -i "s/\[Unreleased\]/\[${BQ_VERSION}\] - ${{ github.event.inputs.version }}/g" clouds/bigquery/CHANGELOG.md
      - name: Update databricks changelog
        if: steps.changes.outputs.databricks == 'true'
        run: |
          DB_VERSION=$(cat clouds/snowflake/version)
          sed -i "s/\[Unreleased\]/\[${DB_VERSION}\] - ${{ github.event.inputs.version }}/g" clouds/databricks/CHANGELOG.md
      - name: Update postgres changelog
        if: steps.changes.outputs.postgres == 'true'
        run: |
          PG_VERSION=$(cat clouds/snowflake/version)
          sed -i "s/\[Unreleased\]/\[${PG_VERSION}\] - ${{ github.event.inputs.version }}/g" clouds/postgres/CHANGELOG.md
      - name: Update redshift changelog
        if: steps.changes.outputs.redshift == 'true'
        run: |
          RS_VERSION=$(cat clouds/snowflake/version)
          sed -i "s/\[Unreleased\]/\[${RS_VERSION}\] - ${{ github.event.inputs.version }}/g" clouds/redshift/CHANGELOG.md
      - name: Update snowflake changelog
        if: steps.changes.outputs.snowflake == 'true'
        run: |
          SF_VERSION=$(cat clouds/snowflake/version)
          sed -i "s/\[Unreleased\]/\[${SF_VERSION}\] - ${{ github.event.inputs.version }}/g" clouds/snowflake/CHANGELOG.md
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Edit changelog versions
          branch: release/${{ github.event.inputs.version }}
          create_branch: true
          commit_user_name: supercartofante
          commit_user_email: supercartofante@cartodb.com
      - name: Create pull request
        uses: repo-sync/pull-request@v2
        id: pull_request
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
        with:
          source_branch: release/${{ github.event.inputs.version }}
          destination_branch: stable
          pr_title: Release version ${{ github.event.inputs.version }}
          pr_reviewer: ${{ github.actor }} 
          pr_body: |
            This PR was created in response to a manual trigger of the release workflow here: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}.
            Please, check that the version files and changelogs are correct.
            Merging this PR will create a GitHub release and publish the AT libraries for the DW whose versions have been updated
      - name: Add labels to PR
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
        run: |
          if [[ ${{ steps.changes.outputs.bigquery }} = "true" ]]; then
            gh pr edit ${{ steps.pull_request.outputs.pr_number }} --add-label dedicated_bigquery
          fi
          if [[ ${{ steps.changes.outputs.databricks }} = "true" ]]; then
            gh pr edit ${{ steps.pull_request.outputs.pr_number }} --add-label dedicated_databricks
          fi
          if [[ ${{ steps.changes.outputs.postgres }} = "true" ]]; then
            gh pr edit ${{ steps.pull_request.outputs.pr_number }} --add-label dedicated_postgres
          fi
          if [[ ${{ steps.changes.outputs.redshift }} = "true" ]]; then
            gh pr edit ${{ steps.pull_request.outputs.pr_number }} --add-label dedicated_redshift
          fi
          if [[ ${{ steps.changes.outputs.snowflake }} = "true" ]]; then
            gh pr edit ${{ steps.pull_request.outputs.pr_number }} --add-label dedicated_snowflake
          fi
      - name: Trigger update doc job
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
        run: gh workflow run -R https://github.com/CartoDB/documentation.git update-doc.yml -f version=new-${{ github.event.inputs.version }}

  notify-slack:
    runs-on: ubuntu-20.04
    name: "Notify Slack"
    needs:
      - draft-new-release
    env:
      RELEASE_VERSION: ${{ github.event.inputs.version }}
    steps:
      - name: Slack notification (#carto-selfhosted)
        env:
          SLACK_CHANNEL: CRQT3HKCH #analytics-toolbox
          SLACK_KEY: ${{ secrets.SLACK_KEY }}
          PR_URL: ${{ needs.draft-new-release.outputs.pr_url }}
        run: |
          set -eu
          MESSAGE="Analytics toolbox Release \`${RELEASE_VERSION}\` is ready, please review and merge the PR:
          - *Status:* :white_check_mark:
          - *<${PR_URL}|Pull Request Analytics toolbox>*"
          curl \
            -F "text=${MESSAGE}" \
            -F "channel=${SLACK_CHANNEL}" \
            -H "Authorization: Bearer ${SLACK_KEY}" \
            -X POST https://slack.com/api/chat.postMessage